global:
## Override the deployment namespace
#   namespaceOverride:

image:
  repository: amazon/aws-for-fluent-bit
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  parsersFiles:
    - /fluent-bit/parsers/parsers.conf
  # extraParsers: |
  #   [PARSER]
  #       Name   logfmt
  #       Format logfmt

input:
  tag: "kube.*"
  path: "/var/log/containers/*.log"
  db: "/var/log/flb_kube.db"
  parser: docker
  dockerMode: "On"
  memBufLimit: 5MB
  skipLongLines: "On"
  refreshInterval: 10

# extraInputs: |
#   [INPUT]
#       Name         winlog
#       Channels     Setup,Windows PowerShell
#       Interval_Sec 1
#       DB           winlog.sqlite

filter:
  match: "kube.*"
  kubeURL: "https://kubernetes.default.svc.cluster.local:443"
  mergeLog: "On"
  mergeLogKey: "data"
  keepLog: "On"
  k8sLoggingParser: "On"
  k8sLoggingExclude: "On"

# extraFilters: |
#   [FILTER]
#       Name   grep
#       Match  *
#       Exclude log lvl=debug*

cloudWatch:
  enabled: false
  match: "*"
  region: "ap-northeast-2"
  logGroupName: ""
  logStreamName:
  logStreamPrefix: ""
  logKey:
  logFormat:
  logRetentionDays:
  roleArn: 
  autoCreateGroup: true
  endpoint:
  credentialsEndpoint: {}

firehose: #firehose lower version #kinesis_firehose high version 
  enabled: true
  match: "*"
  region: "ap-northeast-2"
  deliveryStream: "firehose-elastic"
  roleArn:

kinesis: 
  enabled: false
  match: "*"
  region: "ap-northeast-2"
  stream: "my-kinesis-stream-name"

elasticsearch:
  enabled: false
  match: "*"
  host:
  awsRegion: "ap-northeast-2"

extraOutputs: |
  [OUTPUT]
    Name kinesis_firehose
    match *
    region ap-northeast-2
    deliveryStream firehose-elastic
    time_key
    time_key_format
    log_key
    roleArn
    endpoint
    sts_enpoint
    auto_retry_requests

serviceAccount:
  create: true
  annotations: 
    eks.amazonaws.com/role-arn: arn:aws:iam::<id>:role/eks-node
  name: aws-for-fluent-bit

resources:
  limits:
    memory: 250Mi
  requests:
    cpu: 50m
    memory: 50Mi

## Assign a PriorityClassName to pods if set
# priorityClassName: system-node-critical

updateStrategy:
  type: RollingUpdate

nodeSelector: {}

tolerations: []

affinity: {}

annotations: {}
  # iam.amazonaws.com/role: arn:aws:iam::123456789012:role/role-for-fluent-bit
  
#env: []
## To add extra environment variables to the pods, add as below
env:
  - name: AWS_REGION
    value: "ap-northeast-2"
  - name: CLUSTER_NAME
    value: "logging-pipeline"

#  - name: HOST_NAME
#    valueFrom:
#      fieldRef:
#        fieldPath: spec.nodeName
  

volumes:
  - name: varlog
    hostPath:
      path: /var/log
  - name: varlibdockercontainers
    hostPath:
      path: /var/lib/docker/containers

volumeMounts:
  - name: varlog
    mountPath: /var/log
  - name: varlibdockercontainers
    mountPath: /var/lib/docker/containers
    readOnly: true
    